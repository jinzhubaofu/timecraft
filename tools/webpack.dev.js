/**
* @file webpack dev config
* @author leon <ludafa@outlook.com>
*/

const path = require('path');
const fs = require('fs');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = function (server) {

    return require('./webpack.base')({

        target: 'electron',

        // Add hot reloading in development
        entry: [
            'webpack-hot-middleware/client',
            'webpack/hot/only-dev-server',
            path.join(__dirname, '../src/renderer/main.js')
        ],

        // Don't use hashes in dev mode for better performance
        output: {
            filename: '[name].js',
            chunkFilename: '[name].chunk.js'
        },

        // Add development plugins
        plugins: [
            new webpack.DllReferencePlugin({
                context: process.cwd(),
                manifest: require('../asset/inf.manifest.json')
            }),
            // Tell webpack we want hot reloading
            new webpack.optimize.OccurrenceOrderPlugin(),
            new webpack.HotModuleReplacementPlugin(),
            new webpack.NoErrorsPlugin(),
            new HtmlWebpackPlugin({
                // Inject all files that are generated by webpack, e.g. bundle.js
                inject: true,
                // eslint-disable-line no-use-before-define
                templateContent() {

                    const html = fs.readFileSync(
                        path.join(__dirname, '../src/renderer/index.html'),
                        'utf8'
                    );

                    return html.replace(/<!--@inject:([\w-_.]+)-->/, function ($0, inject) {
                        return `<script src="${server.host}:${server.port}/${inject}"></script>`;
                    });

                }
            }),
            new webpack.DefinePlugin({
                'process.env.NODE_ENV': JSON.stringify('development')
            })
        ],

        // Load the CSS in a style tag in development
        cssLoaders: 'style!css?localIdentName=[local]__[path][name]__[hash:base64:5]&modules&importLoaders=1&sourceMap!postcss',

        // Emit a source map for easier debugging
        devtool: 'eval-source-map'
    });

};
